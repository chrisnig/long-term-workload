%display nonZeros
%display con none

%data transformed.cdat : J set, I set, W set, D set, d_bar_duty[I, D], g_req_on[J, I, W, D], g_req_off[J, W, D], E_pos[J, I, W, D], D_off[J, W, D], W_max, s_hat[J], V set, c[J, V], l_hat[J], A set, c_work[J, A]

parameters:
	alpha_1 := 100;
	alpha_2 := 10;
	alpha_3 := 1;
	gamma_1 := 0.8;
	gamma_2 := 0.8;
	w_times_d := len(W) * len(D);

variables:
	x[J, I, W, D] : binary;
	x_WE[J, W] : binary;
	delta_out_duty[I, W, D] : real[0..];
	delta_req_on[J, I, W, D] : binary;
	delta_req_off[J, W, D] : binary;
	s[J] : real[0..1];
	l[J] : real[0..50];
	y[J, V] : binary;
	
objectives:
	sum{i in I, w in W, d in D : alpha_1 * delta_out_duty[i, w, d]} +
	sum{j in J, v in V : c[j, v] * y[j, v]} -> min;

constraints:
	{
		i in I,
		w in W,
		d in D:
			CT2: delta_out_duty[i, w, d] = d_bar_duty[i, d] - sum{j in J : x[j, i, w, d]};
	}
	
	{
		j in J,
		i in I,
		w in W,
		d in D:
			CT3: delta_req_on[j, i, w, d] = g_req_on[j, i, w, d] - g_req_on[j, i, w, d] * x[j, i, w, d];
	}
	
	{
		j in J,
		w in W,
		d in D:
			CT4: sum{i in I : g_req_off[j, w, d] * x[j, i, w, d]} = delta_req_off[j, w, d];
	}
	
	{
		j in J,
		w in W,
		d in D:
			CT5: sum{i in I : x[j, i, w, d]} <= 1;
	}
	
	CT6: sum{j in J, i in I, w in W, d in D, D_off[j, w, d] == 1 : x[j, i, w, d]} <= 0;
	
	CT7: sum{j in J, i in I, w in W, d in D, E_pos[j, i, w, d] == 0 : x[j, i, w, d]} <= 0;
	
	{
		j in J,
		w in W,
		d in D,
		d > 1:
			CT8a: sum{i in I : x[j, i, w, d]} + sum{i in I : x[j, i, w, d-1]} <= 1;
	}
	
	{
		j in J,
		w in W,
		w > 1:
			CT8b: sum{i in I : x[j, i, w-1, 7]} + sum{i in I : x[j, i, w, 1]} <= 1;
	}
	
	{
		j in J,
		w in W,
		w > 1:
			CT9: x_WE[j, w] + x_WE[j, w-1] <= 1;
	}
	
	{
		j in J,
		w in W:
			CT10: sum{i in I, d in set(6, 7) : x[j, i, w, d]} <= 2 * x_WE[j, w];
	}
	
	{
		j in J:
			CT11c: s[j] = sum{i in I, w in W, d in D : gamma_1 * (1 / w_times_d) * g_req_on[j, i, w, d] - gamma_1 * (1 / w_times_d) * delta_req_on[j, i, w, d]} + sum{w in W, d in D : gamma_1 * (1 / w_times_d) * g_req_off[j, w, d] + gamma_1 * (1 / w_times_d) * delta_req_off[j, w, d]} + (1 - gamma_1) * s_hat[j];
	}
	
	{
		j in J:
			Linearize1: sum{v in V : y[j, v]} = 1;
	}
	
	{
		j in J:
			Linearize2: sum{i in I, w in W, d in D : delta_req_on[j, i, w, d]} + sum{w in W, d in D : delta_req_off[j, w, d]} = sum{v in V : v * y[j, v]};
	}
	
	{
		j in J:
			l[j] = sum{i in I, w in W, d in D : gamma_2 * (1 / w_times_d) * x[j, i, w, d]} + ((1 - gamma_2) * l_hat[j]);
	}
